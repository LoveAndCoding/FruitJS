#!/usr/bin/env node
/**	Command Line Interface
  *	
  **/
var $ = require('../src/Utils.js'),
	argv = require('optimist')
			.options({
				'o':{
						'alias':'output',
						'default':'./output/'
					},
				's':{
						'alias':'singlePage',
						'boolean':true,
						'description':'Flag indicating that all markdown should be exported to a single page'
					}
			})
			.argv,
	path = require('path'),
	FruitJS = require('../fruit.js');

var manifest = argv._[0] || 'manifest.json';

$.PromiseReader(manifest).then(function (fest) {
	json = JSON.parse(fest);
	
	var doc = new FruitJS(json.name || "Docs", path.resolve(argv.o), manifest);
	
	for(var c in json.css)
		doc.addCSS($.GetRelativePath(manifest, json.css[c]));
	
	for(var l in json.less)
		doc.addLESS($.GetRelativePath(manifest, json.less[l]));
	
	for(var i in json.images)
		doc.addImage(json.images[i]);
	if(json.imageTitle) {
		doc.addImage(json.imageTitle);
		doc.setImageTitle(path.basename(json.imageTitle));
	}
	
	for(var p in json.pages)
		doc.addPage($.GetRelativePath(manifest, json.pages[p]));
	
	doc.setTOCLevel(json.tocLevel || 6).render(argv.s || json.singlePage)
		.then(function () {
				console.log('Files were rendered succussfully and placed in the folder '+path.resolve(argv.o));
			},
			function (err) {
				console.error(err);
			});
	
}, function (err) {
	console.error('Unable to read file '+manifest);
	console.error(err);
});