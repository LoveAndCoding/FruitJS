#!/usr/bin/env node
/**	Command Line Interface
  *	
  **/
var $ = require('../src/Utils.js'),
	argv = require('optimist')
			.options({
				'o':{
						'alias':'output',
						'default':'./output/'
					},
				's':{
						'alias':'singlePage',
						'boolean':true,
						'description':'Flag indicating that all markdown should be exported to a single page'
					},
				'x':{
						'alias':'disableExtraction',
						'boolean':true,
						'description':'Disables the automatic extraction of images and assets from internal links in the documents'
					}
			})
			.argv,
	path = require('path'),
	fs = require('fs'),
	FruitJS = require('../fruit.js');

var manifest = argv._[0] || 'manifest.json';

$.PromiseReader(manifest).then(function (fest) {
	var options = JSON.parse(fest);
	
	if(argv.x) {
		options.noExtraction = true;
	}
	
	if(argv.s) {
		options.singlePage = true;
	}
	
	var doc = new FruitJS(options.name || "Documentation", manifest);
	doc.render(path.resolve(argv.o))
		.then(function () {
				console.log('Files were rendered successfully and placed in the folder '+path.resolve(argv.o));
			},
			function (err) {
				console.error(err && err.stack ? err.stack : err);
			});
	
}, function (err) {
	console.error('Unable to read file '+manifest);
	console.error(err);
});